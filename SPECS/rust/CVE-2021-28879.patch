From 1e43823ef5bc19f8ffa60539f8dc93868d6cc1ef Mon Sep 17 00:00:00 2001
From: Thomas Crain <thcrain@microsoft.com>
Date: Sun, 25 Apr 2021 13:14:28 -0500
Subject: [PATCH] Fix CVE-2021-28879

Backported from https://github.com/rust-lang/rust/pull/82289/files

---
 library/core/src/iter/adapters/zip.rs |  3 ++-
 library/core/tests/iter.rs            | 20 ++++++++++++++++++++
 2 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/library/core/src/iter/adapters/zip.rs b/library/core/src/iter/adapters/zip.rs
index 581ac6e0d82..95bb16325ef 100644
--- a/library/core/src/iter/adapters/zip.rs
+++ b/library/core/src/iter/adapters/zip.rs
@@ -201,6 +201,7 @@ where
                 Some((self.a.__iterator_get_unchecked(i), self.b.__iterator_get_unchecked(i)))
             }
         } else if A::may_have_side_effect() && self.index < self.a.size() {
+            self.len += 1;
             // match the base implementation's potential side effects
             // SAFETY: we just checked that `self.index` < `self.a.len()`
             unsafe {
@@ -262,7 +263,7 @@ where
             if sz_a != sz_b {
                 let sz_a = self.a.size();
                 if a_side_effect && sz_a > self.len {
-                    for _ in 0..sz_a - cmp::max(self.len, self.index) {
+                    for _ in 0..sz_a - self.len {
                         self.a.next_back();
                     }
                 }
diff --git a/library/core/tests/iter.rs b/library/core/tests/iter.rs
index 00e3972c42f..94787931994 100644
--- a/library/core/tests/iter.rs
+++ b/library/core/tests/iter.rs
@@ -1882,6 +1882,26 @@ fn test_double_ended_zip() {
     assert_eq!(it.next(), None);
 }
 
+#[test]
+fn test_issue_82282() {
+    fn overflowed_zip(arr: &[i32]) -> impl Iterator<Item = (i32, &())> {
+        static UNIT_EMPTY_ARR: [(); 0] = [];
+
+        let mapped = arr.into_iter().map(|i| *i);
+        let mut zipped = mapped.zip(UNIT_EMPTY_ARR.iter());
+        zipped.next();
+        zipped
+    }
+
+    let arr = [1, 2, 3];
+    let zip = overflowed_zip(&arr).zip(overflowed_zip(&arr));
+
+    assert_eq!(zip.size_hint(), (0, Some(0)));
+    for _ in zip {
+        panic!();
+    }
+}
+
 #[test]
 fn test_double_ended_filter() {
     let xs = [1, 2, 3, 4, 5, 6];
-- 
2.25.1
