From 488c4d63d104ada4b950b7b344e2eaebd02c53ba Mon Sep 17 00:00:00 2001
From: Chris PeBenito <Christopher.PeBenito@microsoft.com>
Date: Mon, 2 May 2022 15:19:00 +0000
Subject: [PATCH 21/28] lvm: Updates for multipath LVM.

Signed-off-by: Chris PeBenito <Christopher.PeBenito@microsoft.com>
---
 policy/modules/kernel/files.if | 18 ++++++++++++++++++
 policy/modules/system/lvm.if   | 18 ++++++++++++++++++
 policy/modules/system/lvm.te   |  8 +++++++-
 policy/modules/system/udev.te  |  5 +++--
 4 files changed, 46 insertions(+), 3 deletions(-)

diff --git a/policy/modules/kernel/files.if b/policy/modules/kernel/files.if
index e3c22b94a..97a54d998 100644
--- a/policy/modules/kernel/files.if
+++ b/policy/modules/kernel/files.if
@@ -3213,6 +3213,24 @@ interface(`files_exec_etc_files',`
 	exec_files_pattern($1, etc_t, etc_t)
 ')
 
+########################################
+## <summary>
+##	Watch /etc files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_watch_etc_files', `
+	gen_require(`
+		type etc_t;
+	')
+
+	allow $1 etc_t:file watch;
+')
+
 ########################################
 ## <summary>
 ##	Get etc_t service status.
diff --git a/policy/modules/system/lvm.if b/policy/modules/system/lvm.if
index 468cbcaa8..bab3d4784 100644
--- a/policy/modules/system/lvm.if
+++ b/policy/modules/system/lvm.if
@@ -81,6 +81,24 @@ interface(`lvm_signull',`
 	allow $1 lvm_t:process signull;
 ')
 
+########################################
+## <summary>
+##      Connect to LVM via abstract UNIX stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lvm_abstract_stream_connect',`
+	gen_require(`
+		type lvm_t;
+	')
+
+	allow $1 lvm_t:unix_stream_socket connectto;
+')
+
 ########################################
 ## <summary>
 ##	Read LVM configuration files.
diff --git a/policy/modules/system/lvm.te b/policy/modules/system/lvm.te
index 1cf6e1753..9937bce80 100644
--- a/policy/modules/system/lvm.te
+++ b/policy/modules/system/lvm.te
@@ -51,7 +51,7 @@ files_type(lvm_var_lib_t)
 # net_admin for multipath
 allow lvm_t self:capability { chown dac_override fowner ipc_lock mknod net_admin sys_admin sys_nice sys_rawio sys_resource };
 dontaudit lvm_t self:capability sys_tty_config;
-allow lvm_t self:process { sigchld sigkill sigstop signull signal setfscreate };
+allow lvm_t self:process { sigchld sigkill sigstop signull signal setfscreate setrlimit };
 # LVM will complain a lot if it cannot set its priority.
 allow lvm_t self:process setsched;
 allow lvm_t self:file rw_file_perms;
@@ -115,6 +115,7 @@ kernel_get_sysvipc_info(lvm_t)
 kernel_read_system_state(lvm_t)
 # Read system variables in /proc/sys
 kernel_read_kernel_sysctls(lvm_t)
+kernel_read_fs_sysctls(lvm_t)
 # for when /usr is not mounted:
 kernel_dontaudit_search_unlabeled(lvm_t)
 # it has no reason to need this
@@ -159,6 +160,7 @@ domain_read_all_domains_state(lvm_t)
 
 files_read_usr_files(lvm_t)
 files_read_etc_files(lvm_t)
+files_watch_etc_files(lvm_t)
 files_read_etc_runtime_files(lvm_t)
 
 fs_getattr_xattr_fs(lvm_t)
@@ -210,6 +212,10 @@ seutil_read_file_contexts(lvm_t)
 seutil_search_default_contexts(lvm_t)
 seutil_sigchld_newrole(lvm_t)
 
+# multipath
+sysnet_read_config(lvm_t)
+sysnet_write_config(lvm_t)
+
 userdom_use_inherited_user_terminals(lvm_t)
 
 ifdef(`init_systemd',`
diff --git a/policy/modules/system/udev.te b/policy/modules/system/udev.te
index 1a692b1f4..d3105f245 100644
--- a/policy/modules/system/udev.te
+++ b/policy/modules/system/udev.te
@@ -42,7 +42,7 @@ ifdef(`enable_mcs',`
 
 allow udev_t self:capability { chown dac_override dac_read_search fowner fsetid mknod net_admin net_raw setgid setuid sys_admin sys_nice sys_ptrace sys_rawio sys_resource };
 allow udev_t self:capability2 { wake_alarm block_suspend };
-allow udev_t self:process { transition signal_perms ptrace getsched setsched getsession getpgid setpgid getcap setcap share getattr setfscreate noatsecure siginh rlimitinh dyntransition execmem setkeycreate setsockcreate getrlimit };
+allow udev_t self:process { transition signal_perms ptrace getsched setsched getsession getpgid setpgid getcap setcap share getattr setfscreate noatsecure siginh rlimitinh dyntransition execmem setkeycreate setsockcreate getrlimit setrlimit };
 allow udev_t self:fd use;
 allow udev_t self:fifo_file rw_fifo_file_perms;
 allow udev_t self:sock_file read_sock_file_perms;
@@ -101,7 +101,7 @@ kernel_rw_unix_dgram_sockets(udev_t)
 kernel_signal(udev_t)
 kernel_search_debugfs(udev_t)
 kernel_search_key(udev_t)
-
+kernel_read_fs_sysctls(udev_t)
 #https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=235182
 kernel_rw_net_sysctls(udev_t)
 kernel_read_crypto_sysctls(udev_t)
@@ -324,6 +324,7 @@ optional_policy(`
 
 optional_policy(`
 	lvm_domtrans(udev_t)
+	lvm_abstract_stream_connect(udev_t)
 ')
 
 optional_policy(`
-- 
2.25.1

